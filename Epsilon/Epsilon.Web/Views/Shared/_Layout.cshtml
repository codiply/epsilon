@using Epsilon.Logic.Constants
@using Epsilon.Logic.Helpers.Interfaces
@using Epsilon.Logic.Models
@using System
@using System.Text

@{
    var appSettingsHelper = DependencyResolver.Current.GetService<IAppSettingsHelper>();
    var applicationName = appSettingsHelper.GetString(AppSettingsKey.ApplicationName);
    var companyName = appSettingsHelper.GetString(AppSettingsKey.CompanyName);

    var userInterfaceCustomisation = (UserInterfaceCustomisationModel)ViewBag.UserInterfaceCustomisation;
}
<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewBag.Title - @applicationName</title>
    <style>[ng\:cloak], [ng-cloak], [data-ng-cloak], [x-ng-cloak], .ng-cloak, .x-ng-cloak { 
        display: none !important; }
    </style>
    @Styles.Render("~/Content/css")
    @RenderSection("styles", false)
    @Scripts.Render("~/bundles/modernizr")
</head>
<body data-ng-app="ngEpsilon">
    <div class="navbar navbar-inverse navbar-fixed-top">
        <div class="container">
            <div class="navbar-header">
                <button type="button" class="navbar-toggle" data-toggle="collapse" data-target=".navbar-collapse">
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                </button>
                @Html.ActionLink(applicationName, 
                       User.Identity.IsAuthenticated 
                       ? AppConstant.AUTHENTICATED_USER_HOME_ACTION 
                       : AppConstant.ANONYMOUS_USER_HOME_ACTION, 
                       User.Identity.IsAuthenticated 
                       ? AppConstant.AUTHENTICATED_USER_HOME_CONTROLLER 
                       : AppConstant.ANONYMOUS_USER_HOME_CONTROLLER, 
                       new { area = "" }, new { @class = "navbar-brand" })
            </div>
            <div class="navbar-collapse collapse">
                <ul class="nav navbar-nav">
                    @*<li>@Html.ActionLink("Home", "Index", "Home")</li>*@
                </ul>
                @Html.Partial("_NavBarRight")
            </div>
        </div>
    </div>
    <div class="container body-content">
        @Html.Partial("_Alerts")
        @RenderBody()
    </div>
    <footer>
        <hr />
        <div class="container">
            <p>&copy; @DateTime.Now.Year - @companyName</p>
        </div>
    </footer>

    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/bootstrap")
    @Scripts.Render("~/bundles/angularjs")
    @Scripts.Render("~/bundles/linq")
    @Scripts.Render("~/bundles/moment")
    @Scripts.Render("~/bundles/angular-moment")
    @Scripts.Render("~/bundles/angular-ui")

    @{
        var languageId = ViewContext.RouteData.Values["languageId"].ToString().ToLower();
        var sb = new StringBuilder();
        sb.Append(Request.Url.Scheme).Append("://").Append(Request.Url.Authority)
            .Append(Request.ApplicationPath.TrimEnd('/')).Append("/");
        var baseUrl = sb.ToString();

        sb.Append(languageId).Append("/");
        var baseUrlWithLanguage = sb.ToString();
    }

    <script type="text/javascript">
        angular.module('ngEpsilon.config', [])
            .constant('BASE_URL', '@baseUrl')
            .constant('BASE_URL_WITH_LANGUAGE', '@baseUrlWithLanguage')
            .constant('DIRECTIVE_TEMPLATE_FOLDER_URL', '@(baseUrlWithLanguage)NgDirectiveTemplate/')
            .constant('LANGUAGE_ID', '@languageId');
    </script>
    @RenderSection("CountryVariantResources", required:false)
    @Scripts.Render("~/bundles/ngapp")
    @RenderSection("scripts", required: false)

    
    @{ 
        var googleAnalyticsTrackingId = appSettingsHelper.GetString(AppSettingsKey.GoogleAnalyticsTrackingId);
    }
    @if (!string.IsNullOrWhiteSpace(googleAnalyticsTrackingId))
    {
    <!-- Google Analytics Start -->
    <script>
        (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
        (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
        m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
        })(window,document,'script','//www.google-analytics.com/analytics.js','ga');

        ga('create', '@googleAnalyticsTrackingId', 'auto');
        ga('send', 'pageview');
    </script>
    <!-- Google Analytics End -->
    }

    @{ 
        var statCounterProjectNumber = appSettingsHelper.GetString(AppSettingsKey.StatCounterProjectNumber);
        var statCounterSecurityCode = appSettingsHelper.GetString(AppSettingsKey.StatcounterSecurityCode);
    }

    @if (!string.IsNullOrWhiteSpace(statCounterProjectNumber) && !string.IsNullOrWhiteSpace(statCounterSecurityCode))
    {
    <!-- Statcounter Start -->
    <script type="text/javascript">
        var sc_project=@statCounterProjectNumber;
        var sc_invisible=1;
        var sc_security="@statCounterSecurityCode";
        var scJsHost = (("https:" == document.location.protocol) ?
            "https://secure." : "http://www.");
            document.write("<sc"+"ript type='text/javascript' src='" +
            scJsHost+
            "statcounter.com/counter/counter.js'></"+"script>");
    </script>
    <!-- Statcounter End -->
    }
</body>
</html>
