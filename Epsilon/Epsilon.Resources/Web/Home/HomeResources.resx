<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Faq_DoINeedAPrinter_Answer" xml:space="preserve">
    <value>You do not need to a printer in order to send verification post to other users. In the instructions for sending verification mail you will find information on how to send post online.</value>
  </data>
  <data name="Faq_DoINeedAPrinter_Question" xml:space="preserve">
    <value>Do I need a printer?</value>
  </data>
  <data name="Faq_PageHeader" xml:space="preserve">
    <value>Frequently Asked Questions</value>
  </data>
  <data name="Faq_PageTitle" xml:space="preserve">
    <value>Frequently Asked Questions</value>
  </data>
  <data name="Faq_WhatHappensIfISendVerificationButNotUsed_Answer_Paragraph1" xml:space="preserve">
    <value>One of the first steps before sending a verification mail is to verify the address exists using online tools (more information will be available in the instructions).</value>
  </data>
  <data name="Faq_WhatHappensIfISendVerificationButNotUsed_Answer_Paragraph2" xml:space="preserve">
    <value>Each tenant receives two verification codes by two different users. If neither code is used, then both senders are credited with tokens for sending the verifications.</value>
  </data>
  <data name="Faq_WhatHappensIfISendVerificationButNotUsed_Question" xml:space="preserve">
    <value>What happens if I send a verification but it is never used by the recipient?</value>
  </data>
  <data name="Faq_WillYouShareMyDetails_Answer_Paragraph1" xml:space="preserve">
    <value>We take the privacy of our users very seriously. Your address will be shared with two other users that do not live in the same area with you, so that they can post your verification codes.</value>
  </data>
  <data name="Faq_WillYouShareMyDetails_Answer_Paragraph2" xml:space="preserve">
    <value>We do not ask or store your name so this information is not available and will not be shared.</value>
  </data>
  <data name="Faq_WillYouShareMyDetails_Question" xml:space="preserve">
    <value>Will you share my address and name with other users?</value>
  </data>
  <data name="Index_Header" xml:space="preserve">
    <value>  </value>
  </data>
  <data name="Index_HowItWorks_Header" xml:space="preserve">
    <value>How it works</value>
  </data>
  <data name="Index_HowItWorks_StepEnterVerificationCode_Text" xml:space="preserve">
    <value>You use the codes to verify your address. You earn tokens.</value>
  </data>
  <data name="Index_HowItWorks_StepHelpSendVerifications_Text" xml:space="preserve">
    <value>To earn more tokens, you can help verify other users by sending them a verification code by post.</value>
  </data>
  <data name="Index_HowItWorks_StepPickAddAddress_Text" xml:space="preserve">
    <value>You pick or add your address. We don't store your name, just your address.</value>
  </data>
  <data name="Index_HowItWorks_StepReceiveVerification_Text" xml:space="preserve">
    <value>You receive two verification codes by post, sent by other users.</value>
  </data>
  <data name="Index_HowItWorks_StepSpendTokens_Text" xml:space="preserve">
    <value>You can use your tokens to access information for other properties.</value>
  </data>
  <data name="Index_HowItWorks_StepSubmitTenancyDetails_Text" xml:space="preserve">
    <value>Once verified, you can submit the information for your tenancy. You earn more tokens.</value>
  </data>
  <data name="Index_MissionStatement_OpeningLine" xml:space="preserve">
    <value>Our mission is to bring transparency to house rental prices.</value>
  </data>
  <data name="Index_MissionStatement_Paragraph1" xml:space="preserve">
    <value>We are here to answer one simple question: What is the rent that previous tenants were paying for the property you are about to rent?</value>
  </data>
  <data name="Index_MissionStatement_Paragraph2" xml:space="preserve">
    <value>We have created a platform that enables tenants to voluntarily share this information. We do not rely on advertised rent prices that might be exaggerated.</value>
  </data>
  <data name="Index_PageTitle" xml:space="preserve">
    <value>Welcome</value>
  </data>
</root>